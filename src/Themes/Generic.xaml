<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:it="clr-namespace:IT.WPF"
                    xmlns:jb="clr-namespace:IT.WPF.JetBrains"
					>
	<!--
                    xmlns:behaviors="clr-namespace:DataGridExtensions.Behaviors"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	-->

	<DataTemplate x:Key="{x:Static it:DataGridFilter.ColumnHeaderTemplateKey}">
		<DockPanel Background="Transparent">
			<it:DataGridFilterHeader DockPanel.Dock="Bottom"/>
			<ContentPresenter x:Name="PART_Content" Content="{Binding}"
                        SnapsToDevicePixels="{Binding SnapsToDevicePixels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"
                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"
                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"/>
		</DockPanel>
	</DataTemplate>

	<ControlTemplate x:Key="{x:Static it:DataGridFilter.TextColumnFilterTemplateKey}">
		<DockPanel>
			<ComboBox ItemsSource="{Binding ItemsSource}" SelectedItem="{Binding SelectedItem}" />
			<TextBlock DockPanel.Dock="Right" Text="qwerty"/>
		</DockPanel>
	</ControlTemplate>



	<!--#endregion	JetBrains	-->	
	<Style x:Key="{x:Static jb:DataGridFilter.ColumnHeaderSearchCheckBoxStyleKey}"
         TargetType="{x:Type CheckBox}">
		<Setter Property="ToggleButton.IsThreeState" Value="true"/>
		<Setter Property="FrameworkElement.Margin" Value="4,0,2,0"/>
		<Style.Triggers>
			<Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
				<Setter Property="UIElement.Opacity" Value="0"/>
			</Trigger>
			<Trigger Property="UIElement.IsMouseOver" Value="true">
				<Setter Property="UIElement.Opacity" Value="1"/>
			</Trigger>
			<Trigger Property="UIElement.IsFocused" Value="true">
				<Setter Property="UIElement.Opacity" Value="1"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="{x:Static jb:DataGridFilter.ColumnHeaderSearchTextBoxClearButtonStyleKey}"
         TargetType="{x:Type Button}">
		<Setter Property="Control.Foreground" Value="LightGray"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border Background="Transparent">
						<Path Data="M 0,0 L 7,7 M 0,7 L 7,0 " Stroke="{TemplateBinding Control.Foreground}"
                  HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="2" Margin="3"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="true">
							<Setter Property="Control.Foreground" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="{x:Static jb:DataGridFilter.ColumnHeaderSearchTextBoxStyleKey}"
         TargetType="{x:Type TextBox}">
		<Setter Property="FrameworkElement.MinWidth" Value="20"/>
		<Setter Property="FrameworkElement.Margin" Value="4,0,2,0"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" 
							BorderThickness="{TemplateBinding Control.BorderThickness}"
							Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
						<DockPanel>
							<Button x:Name="clear" DockPanel.Dock="Right" Focusable="false"
									Style="{DynamicResource {x:Static jb:DataGridFilter.ColumnHeaderSearchTextBoxClearButtonStyleKey}}">
								<!--<Interaction.Behaviors>
									<behaviors:ClearTextBoxOnButtonClickBehavior TextBox="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
								</Interaction.Behaviors>-->
							</Button>
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="false">
							<Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Border.BorderBrush" Value="#FF7EB4EA"/>
						</Trigger>
						<Trigger Property="UIElement.IsKeyboardFocused" Value="true">
							<Setter TargetName="border" Property="Border.BorderBrush" Value="#FF569DE5"/>
						</Trigger>
						<Trigger Property="TextBox.Text" Value="">
							<Setter TargetName="clear" Property="UIElement.Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="TextBox.Text" Value="">
				<Setter Property="UIElement.Opacity" Value="0"/>
			</Trigger>
			<Trigger Property="UIElement.IsMouseOver" Value="true">
				<Setter Property="UIElement.Opacity" Value="1"/>
			</Trigger>
			<Trigger Property="UIElement.IsFocused" Value="true">
				<Setter Property="UIElement.Opacity" Value="1"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="{x:Static jb:DataGridFilter.IconTemplateKey}">
		<Path Data="M 0,0 L 10,0 6,4 6,9 4,9 4,4 Z" Fill="{TemplateBinding Control.Foreground}"
          VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2,0"/>
	</ControlTemplate>
	
	<Style x:Key="{x:Static jb:DataGridFilter.IconStyleKey}" TargetType="{x:Type Control}">
		<Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
		<Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
		<Setter Property="Control.Template" Value="{DynamicResource {x:Static jb:DataGridFilter.IconTemplateKey}}"/>
		<Setter Property="UIElement.Focusable" Value="false"/>
		<Setter Property="Control.Foreground" Value="Gray"/>
	</Style>
	
	<ControlTemplate x:Key="{x:Static jb:DataGridFilter.TextColumnFilterTemplateKey}">
		<Grid>
			<Control Style="{DynamicResource {x:Static jb:DataGridFilter.IconStyleKey}}"/>
			<TextBox Style="{DynamicResource {x:Static jb:DataGridFilter.ColumnHeaderSearchTextBoxStyleKey}}"
               Text="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}"/>
		</Grid>
	</ControlTemplate>
	
	<ControlTemplate x:Key="{x:Static jb:DataGridFilter.CheckBoxColumnFilterTemplateKey}">
		<Grid>
			<Control Style="{DynamicResource {x:Static jb:DataGridFilter.IconStyleKey}}"/>
			<CheckBox Style="{DynamicResource {x:Static jb:DataGridFilter.ColumnHeaderSearchCheckBoxStyleKey}}"
                IsChecked="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}"/>
		</Grid>
	</ControlTemplate>
	
	<ControlTemplate x:Key="{x:Static jb:DataGridFilter.TemplateColumnFilterTemplateKey}">
		<Grid>
			<Control Style="{DynamicResource {x:Static jb:DataGridFilter.IconStyleKey}}"/>
			<TextBox Style="{DynamicResource {x:Static jb:DataGridFilter.ColumnHeaderSearchTextBoxStyleKey}}"
               Text="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}"/>
		</Grid>
	</ControlTemplate>
	
	<DataTemplate x:Key="{x:Static jb:DataGridFilter.ColumnHeaderTemplateKey}">
		<DockPanel Background="Transparent">
			<jb:DataGridFilterColumnControl DockPanel.Dock="Right"/>
			<ContentPresenter x:Name="PART_Content" Content="{Binding}"
                        SnapsToDevicePixels="{Binding SnapsToDevicePixels, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"
                        HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"
                        VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}"/>
		</DockPanel>
	</DataTemplate>
	
	<!--<Style x:Key="{x:Static behaviors:ExtendedStarSizeBehavior.ColumnHeaderGripperToolTipStyleKey}"
         TargetType="{x:Type ToolTip}">
		<Setter Property="ContentControl.ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock>
            <Run Text="+Ctrl =&gt; Apply star sizes to right columns"/>
            <LineBreak/>
            <Run Text="+Shift =&gt; Extend beyond available size"/>
					</TextBlock>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->
	<!--#region -->
	
	<!--
	-->
</ResourceDictionary>